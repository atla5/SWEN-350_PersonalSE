SWEN-250 Project Activity Journal
C Health Monitoring System Project - Part 1

Name: Aidan Sawyer

===========  Stage 1  ==========================================
Start
Estimated Time	00 50
Plan:
(Order of implementation, testing approach, estimation technique)

OI:
  -clean up, comment, document, look over requirements, etc.
  -declare variables for id, time, type, value
  -write read_line(&id,&time,&type,&val) method to parse stdin
   and write to the variables declared within while loop in main()
  -write print statements

TA:
  -bash script comparing actual to expected output.
  

Complete
Actual Time	02 15
Observations:
(Lessons learned, problems encountered, obstacles overcome, etc.)

PE: 
  -had a bit of trouble with writing to the timestamp (char * time[]).
   needed to use strcpy() instead of '*time = field'
  -typeKey was acting up because it wasn't inside of the main function

TT: 
  -could have hacked it out sooner, but i wanted to make it as simple
   and efficient as possible.
  -problems with strcpy().

failed compiles: 28

===========  Stage 2  ==========================================
Start
Estimated Time	01 45
Plan:
(Order of implementation, testing approach, estimation technique)

OI:
  -add a bunch of code for storing values using the correct sturctures
  -write any helpers necessary to ensure things are stored in the right
   place each time.
  -write a printChart() function that takes in an ID and call it 
   within the main while loop.

TA:
  -input file
  -bash script (?)

ET:
  -represents a very large change to the system, and some more in-depth
   looks into the structures. 
  -lot of code to write.

Complete
Actual Time	02 15
Observations:
(Lessons learned, problems encountered, obstacles overcome, etc.)

PE:
  -didn't use pointers to start with for the storage section,
   causing me to create and edit a copy of the blank chart in
   record, writing to the copy, and then doing nothing with it.
   took very little time to recognize it after i did the print 
   function
  -when to add/subtract the one to account for the zeroth
   indexing and 1-5 things. 

LL:
  -ensure you're always editing where things are stored and not
   just copying over what's there and changing the new thing. 
   pointers, pointers, pointers.

failed compiles: 17

TT: 135/105 = 1.28
  -mostly the pointer issue caught me up a bit. 

===========  Stage 3  ==========================================
Start
Estimated Time	HH MM
Plan:
(Order of implementation, testing approach, estimation technique)

Complete
Actual Time	HH MM
Observations:
(Lessons learned, problems encountered, obstacles overcome, etc.)


===========  Stage 4  ==========================================
Start
Estimated Time	HH MM
Plan:
(Order of implementation, testing approach, estimation technique)

Complete
Actual Time	HH MM
Observations:
(Lessons learned, problems encountered, obstacles overcome, etc.)


===========  Stage 5  ==========================================
Start
Estimated Time	HH MM
Plan:
(Order of implementation, testing approach, estimation technique)

Complete
Actual Time	HH MM
Observations:
(Lessons learned, problems encountered, obstacles overcome, etc.)


===========  PROJECT PART 1 SUMMARY REFLECTION  =======================
(Replace this text with a couple of paragraphs summarizing your
experience with this project. What is too easy or too hard? What
was the most challenging technical problem you faced? How
did your estimated and actual time compare? Did your estimates
improve as you advanced to later stages? Why or why not?)
================================================================
